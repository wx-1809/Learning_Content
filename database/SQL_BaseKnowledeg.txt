SQL 基础知识普及

(8)SELECT (9)DISTINCT  (11)<Top Num> <select list>
(1)FROM [left_table]
(3)<join_type> JOIN <right_table>
(2)        ON <join_condition>
(4)WHERE <where_condition>
(5)GROUP BY <group_by_list>
(6)WITH <CUBE | RollUP>
(7)HAVING <having_condition>
(10)ORDER BY <order_by_list>

--------------------------select -----------------------------------------start-------------------------------------
今天先来讲解SELECT的用法：
    SQL SELECT 语句
    SELECT 语句用于从表中选取数据。
    结果被存储在一个结果表中（称为结果集）。
    SQL SELECT 语法
    SELECT 列名称 FROM 表名称
    以及：
    SELECT * FROM 表名称
    注释：SQL 语句对大小写不敏感。SELECT 等效于 select。
    SQL SELECT 实例
    如需获取名为 "LastName" 和 "FirstName" 的列的内容（从名为 "Persons" 的数据库表），请使用类似这样的 SELECT


--------------------------select -----------------------------------------end---------------------------------------





--------------------------DISTINCT -----------------------------------------start-----------------------------------
    在表中，可能会包含重复值。这并不成问题，不过，有时您也许希望仅仅列出不同（distinct）的值。
    关键词 DISTINCT 用于返回唯一不同的值。 作用就是去重；

    语法：
    SELECT DISTINCT 列名称 FROM 表名称
    使用 DISTINCT 关键词
       如果要从 "Company" 列中选取所有的值，我们需要使用 SELECT 语句：


--------------------------DISTINCT -----------------------------------------end-----------------------------------





----------------------------TOP ----------------------------------------- start-----------------------------------
    TOP 子句用于规定要返回的记录的数目。
    对于拥有数千条记录的大型表来说，TOP子句是非常有用的。
    注释：并非所有的数据库系统都支持 TOP 子句。

    SQL Server 的语法：
        SELECT TOP number|percent column_name(s) FROM table_name

    MySQL 和 Oracle 中的 SQL SELECT TOP 是等价的
    MySQL 语法
        SELECT column_name(s)
        FROM table_name
        LIMIT number
    例子
        SELECT *
        FROM Persons
        LIMIT 5


----------------------------TOP ----------------------------------------- end-------------------------------------



----------------------------WHERE -----------------------------------------start-----------------------------------
    WHERE 子句
    如需有条件地从表中选取数据，可将 WHERE 子句添加到 SELECT 语句。

    语法
    SELECT 列名称 FROM 表名称 WHERE 列 运算符 值
    下面的运算符可在 WHERE 子句中使用：
    操作符       描述
      =	        等于
     <>	        不等于
     >	        大于
     <	        小于
     >=	        大于等于
     <=	        小于等于
     BETWEEN	在某个范围内
     LIKE	    搜索某种模式
    注释：在某些版本的 SQL 中，操作符 <> 可以写为 !=。

    引号的使用
     请注意，我们在例子中的条件值周围使用的是单引号。
     SQL 使用单引号来环绕文本值（大部分数据库系统也接受双引号）。如果是数值，请不要使用引号。



----------------------------WHERE -----------------------------------------end-------------------------------------

----------------------------AND&OR -----------------------------------------start----------------------------------

    AND 和 OR 运算符用于基于一个以上的条件对记录进行过滤。
    AND 和 OR 运算符
    AND 和 OR 可在 WHERE 子语句中把两个或多个条件结合起来。
    如果第一个条件和第二个条件都成立，则 AND 运算符显示一条记录。
    如果第一个条件和第二个条件中只要有一个成立，则OR运算符显示一条记录。

    AND 运算符实例
      使用 AND 来显示所有姓为 "Carter" 并且名为 "Thomas" 的人：
      SELECT * FROM Persons WHERE FirstName='Thomas' AND LastName='Carter'

    OR 运算符实例
     使用 OR 来显示所有姓为 "Carter" 或者名为 "Thomas" 的人：
     SELECT * FROM Persons WHERE firstname='Thomas' OR lastname='Carter'

    结合 AND 和 OR 运算符
       我们也可以把 AND 和 OR 结合起来（使用圆括号来组成复杂的表达式）:
       SELECT * FROM Persons WHERE (FirstName='Thomas' OR FirstName='William')AND LastName='Carter'

----------------------------AND&OR -----------------------------------------end------------------------------------


----------------------------ORDER BY ---------------------------------------start-----------------------------------

    ORDER BY 关键字用于对结果集进行排序。

    SQL ORDER BY 关键字
        ORDER BY 关键字用于按升序或降序对结果集进行排序。
        ORDER BY 关键字默认情况下按升序排序记录。
        如果需要按降序对记录进行排序，可以使用DESC关键字。

    SELECT column1, column2, ... FROM table_name
     ORDER BY column1, column2, ... ASC|DESC;

    ORDER BY 多列 实例2
      以下SQL语句从"Customers" 表中选择所有客户，按 "省份" 升序排列，并按 "姓名" 列降序排列：
      SELECT * FROM Customers
      ORDER BY 省份 ASC, 姓名 DESC;

----------------------------ORDER BY ---------------------------------------end-------------------------------------


----------------------------INSERT INTO -------------------------------------start----------------------------------

    INSERT INTO 语句用于向表中插入新记录。
    SQL INSERT INTO 语句
       INSERT INTO 语句用于向表中插入新记录。

    SQL INSERT INTO 语法
     INSERT INTO 语句可以用两种形式编写。
     第一个表单没有指定要插入数据的列的名称，只提供要插入的值：
     INSERT INTO table_name (column1, column2, column3, ...)
        VALUES (value1, value2, value3, ...);

    如果要为表中的所有列添加值，则不需要在SQL查询中指定列名称。但是，请确保值的顺序与表中的列顺序相同。INSERT INTO语法如下所示：
        INSERT INTO table_name
          VALUES (value1, value2, value3, ...);


----------------------------INSERT INTO -------------------------------------end------------------------------------

----------------------------UPDATE ----------------------------------------Start------------------------------------

    UPDATE 语句用于更新表中的现有记录。
    SQL UPDATE 语句
      UPDATE 语句用于更新表中已存在的记录。

    SQL UPDATE 语法
      UPDATE table_name SET column1 = value1,
        column2 = value2, ...
        WHERE condition;

    请注意
        更新表中的记录时要小心！
        要注意SQL UPDATE 语句中的 WHERE 子句！
        WHERE子句指定哪些记录需要更新。如果省略WHERE子句，所有记录都将更新！


----------------------------UPDATE ----------------------------------------end--------------------------------------

----------------------------DELETE ----------------------------------------start------------------------------------

    DELETE语句用于删除表中现有记录。
    SQL DELETE 语句
        DELETE 语句用于删除表中的行。

    SQL DELETE 语法
       DELETE FROM table_name WHERE condition;

    请注意
        删除表格中的记录时要小心！
        注意SQL DELETE 语句中的 WHERE 子句！
        WHERE子句指定需要删除哪些记录。如果省略了WHERE子句，表中所有记录都将被删除！

----------------------------DELETE ----------------------------------------end--------------------------------------

----------------------------LIKE运算符 ----------------------------------------start----------------------------------

    在WHERE子句中使用LIKE运算符来搜索列中的指定模式。


----------------------------LIKE运算符 ----------------------------------------end------------------------------------


























































